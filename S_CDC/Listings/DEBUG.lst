C51 COMPILER V9.59.0.0   DEBUG                                                             04/03/2020 19:36:09 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE DEBUG
OBJECT MODULE PLACED IN .\Objects\DEBUG.obj
COMPILER INVOKED BY: D:\Keil_v5C51\C51\BIN\C51.EXE Public\DEBUG.C LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Public) DEBUG 
                    -OBJECTEXTEND PRINT(.\Listings\DEBUG.lst) TABS(2) OBJECT(.\Objects\DEBUG.obj)

line level    source

   1          /********************************** (C) COPYRIGHT *******************************
   2          * File Name          : DEBUG.C
   3          * Author             : WCH
   4          * Version            : V1.0
   5          * Date               : 2017/01/20
   6          * Description        : CH554 DEBUG Interface
   7                               (1)、串口0输出打印信息，波特率可变;                         
   8          *******************************************************************************/
   9          
  10          #include "CH554.H"
  11          #include "DEBUG.H"
  12          
  13          /*******************************************************************************
  14          * Function Name  : CfgFsys( )
  15          * Description    : CH554时钟选择和配置函数,默认使用内部晶振12MHz，如果定义了FREQ_SYS可以
  16                             根据PLL_CFG和CLOCK_CFG配置得到，公式如下：
  17                             Fsys = (Fosc * ( PLL_CFG & MASK_PLL_MULT ))/(CLOCK_CFG & MASK_SYS_CK_DIV);
  18                             具体时钟需要自己配置
  19          * Input          : None
  20          * Output         : None
  21          * Return         : None
  22          *******************************************************************************/ 
  23          void  CfgFsys( )  
  24          {
  25   1      //    SAFE_MOD = 0x55;
  26   1      //    SAFE_MOD = 0xAA;
  27   1      //     CLOCK_CFG |= bOSC_EN_XT;                          //使能外部晶振
  28   1      //     CLOCK_CFG &= ~bOSC_EN_INT;                        //关闭内部晶振    
  29   1          SAFE_MOD = 0x55;
  30   1          SAFE_MOD = 0xAA;
  31   1      //    CLOCK_CFG = CLOCK_CFG & ~ MASK_SYS_CK_SEL | 0x07;  // 32MHz 
  32   1          CLOCK_CFG = CLOCK_CFG & ~ MASK_SYS_CK_SEL | 0x06;  // 24MHz 
  33   1      //    CLOCK_CFG = CLOCK_CFG & ~ MASK_SYS_CK_SEL | 0x05;  // 16MHz 
  34   1      //    CLOCK_CFG = CLOCK_CFG & ~ MASK_SYS_CK_SEL | 0x04;  // 12MHz
  35   1          //CLOCK_CFG = CLOCK_CFG & ~ MASK_SYS_CK_SEL | 0x03;  // 6MHz  
  36   1      //    CLOCK_CFG = CLOCK_CFG & ~ MASK_SYS_CK_SEL | 0x02;  // 3MHz  
  37   1      //    CLOCK_CFG = CLOCK_CFG & ~ MASK_SYS_CK_SEL | 0x01;  // 750KHz  
  38   1      //    CLOCK_CFG = CLOCK_CFG & ~ MASK_SYS_CK_SEL | 0x00;  // 187.5MHz    
  39   1          SAFE_MOD = 0x00;
  40   1      }
  41          
  42          /*******************************************************************************
  43          * Function Name  : mDelayus(UNIT16 n)
  44          * Description    : us延时函数
  45          * Input          : UNIT16 n
  46          * Output         : None
  47          * Return         : None
  48          *******************************************************************************/ 
  49          void  mDelayuS( UINT16 n )  // 以uS为单位延时
  50          {
  51   1      #ifdef  FREQ_SYS
  52   1      #if   FREQ_SYS <= 6000000
                  n >>= 2;
              #endif
C51 COMPILER V9.59.0.0   DEBUG                                                             04/03/2020 19:36:09 PAGE 2   

  55   1      #if   FREQ_SYS <= 3000000
                  n >>= 2;
              #endif
  58   1      #if   FREQ_SYS <= 750000
                  n >>= 4;
              #endif
  61   1      #endif
  62   1        while ( n ) {  // total = 12~13 Fsys cycles, 1uS @Fsys=12MHz
  63   2          ++ SAFE_MOD;  // 2 Fsys cycles, for higher Fsys, add operation here
  64   2      #ifdef  FREQ_SYS
  65   2      #if   FREQ_SYS >= 14000000
  66   2          ++ SAFE_MOD;
  67   2      #endif
  68   2      #if   FREQ_SYS >= 16000000
  69   2          ++ SAFE_MOD;
  70   2      #endif
  71   2      #if   FREQ_SYS >= 18000000
  72   2          ++ SAFE_MOD;
  73   2      #endif
  74   2      #if   FREQ_SYS >= 20000000
  75   2          ++ SAFE_MOD;
  76   2      #endif
  77   2      #if   FREQ_SYS >= 22000000
  78   2          ++ SAFE_MOD;
  79   2      #endif
  80   2      #if   FREQ_SYS >= 24000000
  81   2          ++ SAFE_MOD;
  82   2      #endif
  83   2      #if   FREQ_SYS >= 26000000
                  ++ SAFE_MOD;
              #endif
  86   2      #if   FREQ_SYS >= 28000000
                  ++ SAFE_MOD;
              #endif
  89   2      #if   FREQ_SYS >= 30000000
                  ++ SAFE_MOD;
              #endif
  92   2      #if   FREQ_SYS >= 32000000
                  ++ SAFE_MOD;
              #endif
  95   2      #endif
  96   2          -- n;
  97   2        }
  98   1      }
  99          
 100          /*******************************************************************************
 101          * Function Name  : mDelayms(UNIT16 n)
 102          * Description    : ms延时函数
 103          * Input          : UNIT16 n
 104          * Output         : None
 105          * Return         : None
 106          *******************************************************************************/
 107          void  mDelaymS( UINT16 n )                                                  // 以mS为单位延时
 108          {
 109   1        while ( n ) {
 110   2      #ifdef  DELAY_MS_HW
                  while ( ( TKEY_CTRL & bTKC_IF ) == 0 );
                  while ( TKEY_CTRL & bTKC_IF );
              #else
 114   2          mDelayuS( 1000 );
 115   2      #endif
 116   2          -- n;
C51 COMPILER V9.59.0.0   DEBUG                                                             04/03/2020 19:36:09 PAGE 3   

 117   2        }
 118   1      }                                         
 119          
 120          /*******************************************************************************
 121          * Function Name  : CH554UART0Alter()
 122          * Description    : CH554串口0引脚映射,
 123          * Input          : None
 124          * Output         : None
 125          * Return         : None
 126          *******************************************************************************/
 127          void CH554UART0Alter()
 128          {
 129   1          PIN_FUNC |= bUART0_PIN_X;                                                  //串口映射到P1.2和P1.3
 130   1      }
 131          
 132          /*******************************************************************************
 133          * Function Name  : mInitSTDIO()
 134          * Description    : CH554串口0初始化,默认使用T1作UART0的波特率发生器,也可以使用T2
 135                             作为波特率发生器
 136          * Input          : None
 137          * Output         : None
 138          * Return         : None
 139          *******************************************************************************/
 140          void  mInitSTDIO( )
 141          {
 142   1          UINT32 x;
 143   1          UINT8 x2; 
 144   1      
 145   1          SM0 = 0;
 146   1          SM1 = 1;
 147   1          SM2 = 0;                                                                   //串口0使用模式1
 148   1      /*
 149   1          RCLK = 1; 
 150   1          TCLK = 1;
 151   1          C_T2 = 0;
 152   1          CP_RL2 = 0;
 153   1          //bTMR_CLK = 1;
 154   1          //bT2_CLK = 1;
 155   1          RCAP2 = 65536 - FREQ_SYS/16/UART0_BUAD;
 156   1          T2MOD = T2MOD | bTMR_CLK | bT2_CLK;*/
 157   1                                                                                    //使用Timer1作为波特率发生器
 158   1          RCLK = 0;                                                                  //UART0接收时钟
 159   1          TCLK = 0;                                                                  //UART0发送时钟
 160   1          PCON |= SMOD;
 161   1          x = 10 * FREQ_SYS / UART0_BUAD / 16;                                       //如果更改主频，注意x的值不
             -要溢出                            
 162   1          x2 = x % 10;
 163   1          x /= 10;
 164   1          if ( x2 >= 5 ) x ++;                                                       //四舍五入
 165   1      
 166   1          TMOD = TMOD & ~ bT1_GATE & ~ bT1_CT & ~ MASK_T1_MOD | bT1_M1;              //0X20，Timer1作为8位自动重
             -载定时器
 167   1          T2MOD = T2MOD | bTMR_CLK | bT1_CLK;                                        //Timer1时钟选择
 168   1          TH1 = 0-x;                                                                 //12MHz晶振,buad/12为实际需
             -设置波特率
 169   1          TR1 = 1;                                                                   //启动定时器1
 170   1          //TR2 = 1;
 171   1          TI = 1;
 172   1          REN = 1;                                                                   //串口0接收使能
 173   1      }
 174          
 175          /*******************************************************************************
C51 COMPILER V9.59.0.0   DEBUG                                                             04/03/2020 19:36:09 PAGE 4   

 176          * Function Name  : CH554UART0RcvByte()
 177          * Description    : CH554UART0接收一个字节
 178          * Input          : None
 179          * Output         : None
 180          * Return         : SBUF
 181          *******************************************************************************/
 182          UINT8  CH554UART0RcvByte( )
 183          {
 184   1          while(RI == 0);                                                            //查询接收，中断方式可不用
 185   1          RI = 0;
 186   1          return SBUF;
 187   1      }
 188          
 189          /*******************************************************************************
 190          * Function Name  : CH554UART0SendByte(UINT8 SendDat)
 191          * Description    : CH554UART0发送一个字节
 192          * Input          : UINT8 SendDat；要发送的数据
 193          * Output         : None
 194          * Return         : None
 195          *******************************************************************************/
 196          void CH554UART0SendByte(UINT8 SendDat)
 197          {
 198   1        SBUF = SendDat;                                                              //查询发送，中断方式可不用下
             -面2条语句,但发送前需TI=0
 199   1        while(TI ==0);
 200   1        TI = 0;
 201   1      }
 202          
 203          /*******************************************************************************
 204          * Function Name  : UART1Setup()
 205          * Description    : CH554串口1初始化
 206          * Input          : None
 207          * Output         : None
 208          * Return         : None
 209          *******************************************************************************/
 210          void  UART1Setup( )
 211          {
 212   1        UINT32 x;
 213   1        UINT8 x2;
 214   1        U1SM0 = 0;                                                                   //UART1选择8位数据位
 215   1        U1SMOD = 1;                                                                  //快速模式
 216   1        U1REN = 1;                                                                   //使能接收
 217   1        //SBAUD1 = 0 - FREQ_SYS/16/UART1_BUAD;
 218   1        x = 10 * FREQ_SYS / UART1_BUAD / 16;                                       //如果更改主频，注意x的值不要
             -溢出                            
 219   1        x2 = x % 10;
 220   1        x /= 10;
 221   1        if ( x2 >= 5 ) x ++;                                                       //四舍五入
 222   1        SBAUD1 =  0 - x;
 223   1        IE_UART1 = 1;
 224   1        EA = 1;
 225   1      }
 226          
 227          /*******************************************************************************
 228          * Function Name  : CH554UART1RcvByte()
 229          * Description    : CH554UART1接收一个字节
 230          * Input          : None
 231          * Output         : None
 232          * Return         : SBUF
 233          *******************************************************************************/
 234          UINT8  CH554UART1RcvByte( )
 235          {
C51 COMPILER V9.59.0.0   DEBUG                                                             04/03/2020 19:36:09 PAGE 5   

 236   1          while(U1RI == 0);                                                           //查询接收，中断方式可不用
 237   1          U1RI = 0;
 238   1          return SBUF1;
 239   1      }
 240          
 241          /*******************************************************************************
 242          * Function Name  : CH554UART1SendByte(UINT8 SendDat)
 243          * Description    : CH554UART1发送一个字节
 244          * Input          : UINT8 SendDat；要发送的数据
 245          * Output         : None
 246          * Return         : None
 247          *******************************************************************************/
 248          void CH554UART1SendByte(UINT8 SendDat)
 249          {
 250   1        SBUF1 = SendDat;                                                             //查询发送，中断方式可不用下
             -面2条语句,但发送前需TI=0
 251   1        while(U1TI ==0);
 252   1        U1TI = 0;
 253   1      }
 254          
 255          /*******************************************************************************
 256          * Function Name  : CH554WatchDog(UINT8 mode)
 257          * Description    : CH554看门狗模式设置
 258          * Input          : UINT8 mode 
 259                             0  timer
 260                             1  watchDog
 261          * Output         : None
 262          * Return         : None
 263          *******************************************************************************/
 264          void CH554WatchDog(UINT8 mode)
 265          {
 266   1        SAFE_MOD = 0x55;
 267   1        SAFE_MOD = 0xaa;                                                             //进入安全模式
 268   1        if(mode){
 269   2          GLOBAL_CFG |= bWDOG_EN;
 270   2        }
 271   1        else GLOBAL_CFG &= ~bWDOG_EN; 
 272   1        SAFE_MOD = 0x00;                                                             //退出安全模式
 273   1        WDOG_COUNT = 0;                                                              //看门狗赋初值
 274   1      }
 275          
 276          /*******************************************************************************
 277          * Function Name  : CH554WatchDogFeed(UINT8 tim)
 278          * Description    : CH554看门狗喂狗
 279          * Input          : UINT8 tim 看门狗复位时间设置
 280                             00H(6MHz)=2.8s
 281                             80H(6MHz)=1.4s
 282          * Output         : None
 283          * Return         : None
 284          *******************************************************************************/
 285          void CH554WatchDogFeed(UINT8 tim)
 286          {
 287   1        WDOG_COUNT = tim;                                                             //看门狗赋初值  
 288   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    415    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      10
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
C51 COMPILER V9.59.0.0   DEBUG                                                             04/03/2020 19:36:09 PAGE 6   

   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
